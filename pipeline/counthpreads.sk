from snakemake.utils import R
from os.path import join
import csv

# simulate a bash login shell, see https://bitbucket.org/johanneskoester/snakemake/wiki/FAQ
shell.executable("/bin/bash")
#
# # "unofficial bash strict mode" http://www.redsymbol.net/articles/unofficial-bash-strict-mode/
shell.prefix("source ~/.bashrc; set -euo pipefail;")
#
#

# Globals ---------------------------------------------------------------------

# get the seqbatch : libid pairs for given comparebatch id
LIBIDS = []
SEQBATCHS = []
sampleinfo = open(config["SAMPLEINFO"],"r",newline='')
for line in sampleinfo:
	allelems = line.strip().split("\t");
	if allelems[3] == config["ANAID"]:
		LIBIDS.append(allelems[1])
		SEQBATCHS.append(allelems[2])

rule final:
	input: 
		expand(config["RESULT"] + config["ANAID"] + "/" + "{seqbatch}/" + "{id}_vs_" +config["HPID"] + "_hp.result.count.txt",zip,id=LIBIDS,seqbatch=SEQBATCHS)

rule extractMature:
	input: 
		config["INPUTDIR"] + "{seqbatch}/" + "{id}.fastq.gz"
	output: 
		config["HPREADS"] + "{seqbatch}/" + "{id}.mature.count.txt.gz"
	params:
		hpid=config["HPID"]

	threads: 1
	shell:
		"""
			{config[EXTRACTMATURE]} {input} {params.hpid} {output}
		"""


rule mapToHairpin:
	input:
		rules.extractMature.output
	output:
		config["RESULT"] + config["ANAID"] + "/" + "{seqbatch}/" + "{id}_vs_" +config["HPID"] + "_hp.result.count.txt"
	params:
		hpseq = config["HAIRPIN"], eddist = config["DISCUT"], numseqs = config["BATCHSIZE"]
	threads:
		24
	shell:
		"""
			{config[SUMHPCOUNT]} -args {input} {params.hpseq} {output} {params.eddist} {threads} {params.numseqs}
		"""

